#!/usr/bin/env python

import c3d
import sys


def print_metadata(reader):
    print('''Header information:
  parameter_block: {parameter_block}
      point_count: {point_count}
     analog_count: {analog_count}
      first_frame: {first_frame}
       last_frame: {last_frame}
          max_gap: {max_gap}
     scale_factor: {scale_factor}
       data_block: {data_block}
 sample_per_frame: {sample_per_frame}
       frame_rate: {frame_rate}
long_event_labels: {long_event_labels}
      label_block: {label_block}'''.format(reader.header))

    for name, g in sorted(reader.groups()):
        if isinstance(name, int):
            continue
        print('')
        for key, p in sorted(g.params.iteritems()):
            if len(p.dimensions) == 2:
                cols, rows = p.dimensions
                for r in range(rows):
                    print('{0}.{1}: {2}B * {3} [{4} of {5}] {6}'.format(
                        name, key, p.data_size, cols, r, rows,
                        repr(p.bytes[r * cols:(r+1) * cols])))
                continue
            shaped = ''
            dim = ' %s' % p.dimensions if p.dimensions else ''
            raw = p.bytes
            if p.bytes:
                raw = '%s%s' % (repr(p.bytes[:3]), ['', '...'][len(p.bytes) > 3])
                if len(p.dimensions) == 0:
                    get = {2: g.get_uint16, 4: g.get_float}.get(len(p.bytes), g.get_uint8)
                    shaped = ' -> %s' % get(key)
            print('{0}.{1}: {2}B{3} {4}{5}'.format(
                    name, key, p.data_size, dim, raw, shaped))


if __name__ == '__main__':
    if len(sys.argv) == 1:
        print('Usage: %s FILE...' % sys.argv[0])
        sys.exit(1)
    for f in sys.argv[1:]:
        print('*** %s ***' % f)
        with open(f) as handle:
            print_metadata(c3d.Reader(handle))
